{"config":{"lang":["en","ja"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This project is a work in progress and cannot yet compile a Hello World program.</p>"},{"location":"#overview","title":"Overview","text":"<p>redy is a new programming language to achieve both high performance and robust memory safety.</p> <p>It emphasizes performance in all aspects, from reducing computation and memory usage to minimizing the size of compiled binaries, which is often overlooked in an era of abundant computing resources.</p>"},{"location":"#features","title":"Features","text":"<p>Most features have not yet been implemented, but the design is fully defined.</p>"},{"location":"#complete-memory-safety","title":"Complete Memory Safety","text":"<p>redy uses an ownership system inspired by Rust. All heap memory is automatically freed when it goes out of scope, completely preventing memory leaks.</p>"},{"location":"#zero-cost-access-control","title":"Zero-Cost Access Control","text":"<p>All potential illegal memory access is detected at compile time, eliminating runtime overhead. Say goodbye to segmentation faults!</p>"},{"location":"#blazing-fast","title":"Blazing Fast","text":"<p>Runtime costs, such as boundary checks, are minimized through various compile-time analysis methods to achieve the best possible performance.</p>"},{"location":"#no-lifetime-annotation-required","title":"No Lifetime Annotation Required","text":"<p>The compiler uses a Non-Lexical Constraint-Based Lifetime Checker(NLCBL). This system is more flexible than Rust's while remaining safe. If the lifetime relationships are intuitive, the compiler can often infer them without requiring explicit annotations.</p>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#install-redy","title":"Install redy","text":"<p>There are two ways to install redy:   1. Install a pre-built binary (recommended).   2. Build from source.</p> <p>Detailed instructions are available in the installation guide.</p>"},{"location":"#start-coding","title":"Start Coding","text":"<p>We use <code>.ry</code> as the extension for source files. To get started, let's create an empty directory and file <code>main.ry</code>, then open <code>main.ry</code> in any text editor.</p> <p>Now we're ready, let's go to Hello World and write your first program.</p>"},{"location":"install/","title":"Installation","text":"<p>This guide will walk you through the process of installing the redy.</p>"},{"location":"install/#1-install-pre-built-binary-recommended","title":"1. Install Pre-built Binary (Recommended)","text":"<p>TBW...</p>"},{"location":"install/#manual-installer-archive","title":"Manual Installer Archive","text":"<ul> <li>Linux</li> <li>Windows</li> <li>macOS</li> </ul>"},{"location":"install/#2-building-from-source","title":"2. Building from Source","text":"<p>To build redy from its source code, follow these steps.</p>"},{"location":"install/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<p>Clone the repository and its submodules, then navigate into the directory.</p> <pre><code>git clone --depth 1 --recursive [https://github.com/pugur523/redy.git](https://github.com/pugur523/redy.git)\ncd redy\n</code></pre>"},{"location":"install/#step-2-set-up-dependencies","title":"Step 2: Set up Dependencies","text":"<p>redy requires both Python and system-level dependencies.</p>"},{"location":"install/#python-dependencies","title":"Python Dependencies","text":"<p>Install the required Python packages and set up a virtual environment.</p>  Installation Details   1. Install Python(&gt;= 3.13) from the official website.  2. Install uv: <pre><code>pip install uv\n</code></pre>   3. Create and activate a virtual environment: <pre><code>uv venv\nsource .venv/bin/activate\n</code></pre>   4. Install the build dependencies:    <pre><code>uv sync\n</code></pre>"},{"location":"install/#system-dependencies","title":"System DependenciesUbuntuArch LinuxWindowsmacOSVerification","text":"<p>The required system dependencies vary by operating system.</p>  Installation Details  <pre><code>sudo apt-get update\nsudo apt-get install -y wget curl ninja-build nasm nsis wine python3\n\n# Install CMake\nCMAKE_VERSION=\"4.1.1\"\ncmake_url=\"https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh\"\nwget -nv \"${cmake_url}\" -O cmake-installer.sh\nchmod +x cmake-installer.sh\nsudo ./cmake-installer.sh --skip-license --prefix=/usr/local\nrm cmake-installer.sh\n\n# Install LLVM\nLLVM_VERSION=\"21\"\nwget -qOllvm.sh [https://apt.llvm.org/llvm.sh](https://apt.llvm.org/llvm.sh) &amp;&amp; chmod +x llvm.sh &amp;&amp; sudo ./llvm.sh $LLVM_VERSION all &amp;&amp; rm ./llvm.sh\n\nsource ./src/build/scripts/install_llvm_mingw.sh\necho \"export LLVM_MINGW_DIR=${LLVM_MINGW_DIR}\" &gt;&gt; ~/.bashrc\necho \"export LLVM_MINGW_DIR=${LLVM_MINGW_DIR}\" &gt;&gt; ~/.zshrc\n</code></pre> <pre><code>pacman -S --noconfirm \\\n        base-devel \\\n        git \\\n        wget \\\n        curl \\\n        gnupg \\\n        python \\\n        python-pip \\\n        ninja \\\n        nasm \\\n        yasm \\\n        pkgconf \\\n        openssl \\\n        llvm \\\n        clang \\\n        clang-tools-extra \\\n        lld \\\n        llvm-libs \\\n        cmake\nyay -S --noconfirm libc++-with-libunwind\n</code></pre>   Install Chocolatey, and run the following command in administrator PowerShell terminal:  <pre><code>choco install -y nsis ninja nasm cmake llvm\n</code></pre> <pre><code>brew update\nbrew install ninja nasm cmake llvm@20 lld@20\necho 'export PATH=\"$(brew --prefix llvm@20)/bin:$PATH\"' &gt;&gt; ~/.bash_profile\necho 'export PATH=\"$(brew --prefix lld@20)/bin:$PATH\"' &gt;&gt; ~/.bash_profile\n</code></pre>   Ensure all required tools are correctly installed and accessible from the command line by running the following commands.   <pre><code>nasm --version\n# Expected output: NASM version 2.16.03 compiled on May 13 2025\n\ncmake --version\n# Expected output: cmake version 4.1.1-dirty\n# CMake suite maintained and supported by Kitware ([kitware.com/cmake](https://kitware.com/cmake)).\n\nninja --version\n# Expected output: 1.12.1\n\nclang --version\n# Expected output: clang version 20.1.8\n# Target: x86_64-pc-linux-gnu\n# Thread model: posix\n# InstalledDir: /usr/bin\n\n# For Linux only\necho $LLVM_MINGW_DIR\n# Expected output: /opt/llvm-mingw-20250826-ucrt-ubuntu-22.04-x86_64\n</code></pre>"},{"location":"install/#step-3-build-and-install","title":"Step 3: Build and Install","text":"<p>Execute the build script. This process may take 5 to 10 minutes, it's time for tea :)</p> <pre><code>./cc build --release --install\n</code></pre> <p>Upon successful completion, the compiled artifacts will be located in the <code>./out/install/{os}/{arch}/release/bin/</code> directory.</p> <p>If you encounter any compilation errors, please double-check that all required tools and dependencies are installed and properly configured.</p>"},{"location":"tutorials/0001_helloworld/","title":"Hello World!","text":"<p>This is Hello World program in redy. Try pasting it to your <code>main.ry</code>.</p> <pre><code>fn main() {\n  println#(\"Hello World from redy!\")\n}\n</code></pre> <p>To run this program, you need to \"compile\" the program first, so run the command below, then the executable binary will be generated in <code>./out/</code></p> <pre><code>redy main.ry\n# Compiling... : main.ry\n# Completed!   : main.ry\n</code></pre> <p>Now let's run our first redy program!</p> <pre><code>./out/main\n# Hello World from redy!\n</code></pre> <p>When you run the executable, it prints the string \"Hello World\" as standard output, as we can see in the console.</p>"},{"location":"tutorials/0001_helloworld/#how-the-hello-world-program-works","title":"How the Hello World Program Works","text":"<p>What does that hello world program mean is very simple to understand, let's go through it line by line.</p> <p><code>fn main() {</code></p> <p>The first line means that \"We will declare <code>function</code>(<code>fn</code>) named <code>main</code>\", and \"Start defining the content of the function(<code>{</code>)\". <code>function</code> in programming means typically something like a collection of processes.</p> <p><code>println#(\"Hello, World from redy!\")</code></p> <p>The next line is also simple, calling function named <code>println#()</code> with argument <code>\"Hello, World from redy!\"</code>. <code>println#()</code> is provided function that prints line to the console, and we called it with single string argument. the characters surrounded by double quotation are considered as <code>literal string</code>, a set of the characters that can be handled at a time.</p> <p>Note that <code>println#()</code> is not a function actually, but it's a bit complicated to explain why now, so we'll come back to that later, just consider it as a function.  </p> <p><code>}</code></p> <p>The last line is the simplest one, that means \"End defining this function\", and the program ends here, so we created the functional program in only 3 lines!</p>"},{"location":"tutorials/0002_data_types_and_variables/","title":"Data Types and Variables","text":"<p>Now that you've written some basic programs in redy, let's dive a little deeper into the fundamental building blocks of redy: data types and variables.</p>"},{"location":"tutorials/0002_data_types_and_variables/#data-types","title":"Data Types","text":"<p>A data type tells the compiler what kind of data a value holds. redy has several built-in data types, just like other programming languages.</p> <ul> <li>Integers (<code>i32</code>, <code>i64</code>, <code>u32</code>, etc.): Whole numbers without a fractional part. The letters <code>i</code> and <code>u</code> stand for \"signed\" and \"unsigned\" respectively, and the number (e.g., <code>32</code>) indicates the number of bits used to store the value.</li> <li>Booleans (<code>bool</code>): A value that can only be either <code>true</code> or <code>false</code>.</li> <li>Strings (<code>str</code>): A sequence of characters.</li> </ul> <p>There are many more data types in redy, but we will stick to these for now.</p>"},{"location":"tutorials/0002_data_types_and_variables/#variables","title":"Variables","text":"<p>A variable is a named storage location for a value. In redy, you can declare a variable assign a value to it using <code>:=</code>.</p> <pre><code>fn main() {\n\u00a0 my_number := 42            // An integer variable\n\u00a0 is_active := true          // A boolean variable\n\u00a0 greeting := \"Hello, redy!\" // A string variable\n\u00a0\n\u00a0 println#(\"The number is {}\", my_number)\n\u00a0 println#(\"Is active? {}\", is_active)\n\u00a0 println#(\"Greeting: {}\", greeting)\n}\n</code></pre> <p>Once you compile and run this program, it will print out the values of these variables. Notice that redy can often infer the data type of a variable without you explicitly writing it, which makes your code cleaner.</p>"},{"location":"tutorials/0003_print_formatted/","title":"Print Formatted","text":"<p>Let's print a formatted string:</p> <pre><code>fn main() {\n  n := 5\n  println#(\"3 + 2 is {}\", n)\n}\n</code></pre> <pre><code>redy main.ry\n# Compiling... : main.ry\n# Completed!   : main.ry\n\n./out/main\n# 3 + 2 is 5\n</code></pre> <p>As you can see, we finally printed a value stored in <code>n</code>! Actually, <code>println#()</code> can be passed multiple arguments. the first argument is called <code>format string</code>, and the arguments remaining after that are called <code>format args</code>. All brackets(<code>{}</code>) contained in the <code>format string</code> will be replaced by the <code>format args</code>.</p>"},{"location":"tutorials/0004_simple_fizz_buzz_program/","title":"Simple Fizz Buzz Program","text":"<p>The FizzBuzz program is a common coding challenge used to assess basic programming skills. The program iterates through a sequence of numbers, typically from 1 to 100. For each number, it checks for divisibility by 3 and 5. If a number is divisible by 3, it prints \"Fizz\". If it's divisible by 5, it prints \"Buzz\". If it's divisible by both 3 and 5, it prints \"FizzBuzz\". If none of the conditions are met, it prints the number itself.</p> <p>Now, let's try to write the FizzBuzz program in redy.</p> <pre><code>fn main() {\n\u00a0 for i: 1..=100 {\n\u00a0 \u00a0 if i % 15 == 0 {\n\u00a0 \u00a0 \u00a0 println#(\"FizzBuzz\")\n\u00a0 \u00a0 } else if i % 3 == 0 {\n\u00a0 \u00a0 \u00a0 println#(\"Fizz\")\n\u00a0 \u00a0 } else if i % 5 == 0 {\n\u00a0 \u00a0 \u00a0 println#(\"Buzz\")\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 println#(\"{}\", i)\n\u00a0 \u00a0 }\n\u00a0 }\n}\n</code></pre> <p>If you run this code, you will get the FizzBuzz output from 1 to 100. Let's understand what's going on here.</p> <p>The first line <code>for i: 1..=100 { ... }</code> creates a loop that iterates a number <code>i</code> from <code>1</code> to <code>100</code> (inclusive). The code inside the curly braces <code>{ ... }</code> will be executed for each number.</p> <p>Inside the loop, we use <code>if...else if...else</code> statements, which are used to execute different code blocks based on conditions.</p> <ul> <li><code>i % 15 == 0</code>: This condition checks if the number <code>i</code> is perfectly divisible by 15. The <code>%</code> operator calculates the remainder of a division. If the remainder is <code>0</code>, it means <code>i</code> is a multiple of 15.</li> <li><code>i % 3 == 0</code> and <code>i % 5 == 0</code>: These conditions check for divisibility by 3 and 5, respectively.</li> <li><code>else { println#(\"{}\", i) }</code>: If none of the above conditions are true, the program executes the code in this block, simply printing the number itself.</li> </ul> <p>Notice that the condition <code>i % 15 == 0</code> comes first. This is because a number divisible by 15 is also divisible by 3 and 5. If we checked for <code>i % 3 == 0</code> first, it would print \"Fizz\" and then move on, never reaching the \"FizzBuzz\" condition.</p>"},{"location":"ja/","title":"\u306f\u3058\u3081\u306b","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u92ed\u610f\u958b\u767a\u4e2d\u3067\u3042\u308a\u3001\u73fe\u72b6\u3067\u306fHello World\u306e\u30b3\u30fc\u30c9\u3059\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"ja/#_2","title":"\u6982\u8981","text":"<p>redy \u306f\u3001\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u5805\u7262\u306a\u30e1\u30e2\u30ea\u5b89\u5168\u6027\u306e\u4e21\u7acb\u3092\u76ee\u6307\u3059\u65b0\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002</p> <p>\u8c4a\u5bcc\u306a\u8a08\u7b97\u8cc7\u6e90\u304c\u3042\u308b\u6642\u4ee3\u306b\u5fd8\u308c\u3089\u308c\u304c\u3061\u306a\u3001\u8a08\u7b97\u91cf\u306e\u524a\u6e1b\u3001\u30e1\u30e2\u30ea\u52b9\u7387\u306e\u5411\u4e0a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306e\u30d0\u30a4\u30ca\u30ea\u30b5\u30a4\u30ba\u306e\u6700\u5c0f\u5316\u306a\u3069\u3001\u771f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u91cd\u8996\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/#_3","title":"\u7279\u9577","text":"<p>\u307b\u3068\u3093\u3069\u306e\u6a5f\u80fd\u306f\u307e\u3060\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30ed\u30b8\u30c3\u30af\u306e\u8a2d\u8a08\u81ea\u4f53\u306f\u3059\u3079\u3066\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/#_4","title":"\u5b8c\u5168\u306a\u30e1\u30e2\u30ea\u5b89\u5168\u6027","text":"<p>redy\u306f\u3001Rust\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u305f\u6240\u6709\u6a29\u30b7\u30b9\u30c6\u30e0\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u306f\u30b9\u30b3\u30fc\u30d7\u3092\u629c\u3051\u308b\u3068\u81ea\u52d5\u7684\u306b\u89e3\u653e\u3055\u308c\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u5b8c\u5168\u306b\u9632\u304e\u307e\u3059\u3002</p>"},{"location":"ja/#_5","title":"\u30bc\u30ed\u30b3\u30b9\u30c8\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1","text":"<p>\u6f5c\u5728\u7684\u306a\u4e0d\u6b63\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306f\u3059\u3079\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3055\u308c\u308b\u305f\u3081\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u3068\u306f\u3082\u3046\u304a\u5225\u308c\u3067\u3059\uff01</p>"},{"location":"ja/#_6","title":"\u8d85\u9ad8\u901f","text":"<p>\u5883\u754c\u30c1\u30a7\u30c3\u30af\u306a\u3069\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u30b3\u30b9\u30c8\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u89e3\u6790\u624b\u6cd5\u306b\u3088\u3063\u3066\u6700\u5c0f\u9650\u306b\u6291\u3048\u3089\u308c\u3001\u6700\u9ad8\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</p>"},{"location":"ja/#_7","title":"\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u4e0d\u8981","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001Rust\u3088\u308a\u3082\u67d4\u8edf\u3067\u3042\u308a\u306a\u304c\u3089\u5b89\u5168\u6027\u3092\u4fdd\u3064 \u975e\u8a9e\u5f59\u7684\u5236\u7d04\u30d9\u30fc\u30b9\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u30c1\u30a7\u30c3\u30ab\u30fc(NLCBL)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5909\u6570\u306e\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u306e\u95a2\u4fc2\u304c\u76f4\u611f\u7684\u306a\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u660e\u793a\u7684\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b\u63a8\u8ad6\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/#_8","title":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":""},{"location":"ja/#redy","title":"redy\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>redy\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u306f2\u3064\u3042\u308a\u307e\u3059\u3002  </p> <ol> <li>\u30d3\u30eb\u30c9\u6e08\u307f\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b(\u63a8\u5968)</li> <li>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b</li> </ol> <p>\u8a73\u7d30\u306a\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/#redy_1","title":"redy\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f","text":"<p>redy\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u62e1\u5f35\u5b50\u3068\u3057\u3066<code>.ry</code>\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u307e\u305a\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u305d\u306e\u4e2d\u306b<code>main.ry</code>\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u958b\u3044\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u3053\u308c\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6e96\u5099\u306f\u3067\u304d\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u3001Hello World\u306b\u9032\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/install/","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u4ee5\u4e0b\u3001redy\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"ja/install/#1","title":"1. \u30d3\u30eb\u30c9\u6e08\u307f\u30d0\u30a4\u30ca\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb (\u63a8\u5968)","text":"<p>TBW...</p>"},{"location":"ja/install/#_2","title":"\u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u30a2\u30fc\u30ab\u30a4\u30d6","text":"<ul> <li>Linux</li> <li>Windows</li> <li>macOS</li> </ul>"},{"location":"ja/install/#2","title":"2. \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9","text":"<p>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/install/#1_1","title":"\u30b9\u30c6\u30c3\u30d71: \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3","text":"<p>\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>git clone --depth 1 --recursive [https://github.com/pugur523/redy.git](https://github.com/pugur523/redy.git)\ncd redy\n</code></pre>"},{"location":"ja/install/#2_1","title":"\u30b9\u30c6\u30c3\u30d72: \u4f9d\u5b58\u95a2\u4fc2\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<p>redy\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u3092\u9806\u3092\u8ffd\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"ja/install/#python","title":"Python\u306e\u4f9d\u5b58\u95a2\u4fc2","text":"<p>\u307e\u305a\u306fPython\u95a2\u9023\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u3042\u308f\u305b\u3066\u4eee\u60f3\u74b0\u5883\u3082\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002</p>  \u8a73\u3057\u3044\u624b\u9806   1. Python(&gt;= 3.13)\u3092\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u624b\u9806\u901a\u308a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 2. uv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059: <pre><code>pip install uv\n</code></pre>   3. \u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3057\u307e\u3059: <pre><code>uv venv\nsource .venv/bin/activate\n</code></pre>   4. \u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306aPython\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u540c\u671f\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059: <pre><code>uv sync\n</code></pre>"},{"location":"ja/install/#_3","title":"\u30b7\u30b9\u30c6\u30e0\u306e\u4f9d\u5b58\u95a2\u4fc2UbuntuArch LinuxWindowsmacOS\u4f9d\u5b58\u95a2\u4fc2\u306e\u78ba\u8a8d","text":"<p>\u5fc5\u8981\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u3001OS\u3054\u3068\u306b\u7570\u306a\u308a\u307e\u3059\u3002</p>  \u8a73\u3057\u3044\u624b\u9806  <pre><code>sudo apt-get update\nsudo apt-get install -y wget curl ninja-build nasm nsis wine python3\n\n# CMake\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCMAKE_VERSION=\"4.1.1\"\ncmake_url=\"[https://github.com/Kitware/CMake/releases/download/v$](https://github.com/Kitware/CMake/releases/download/v$){CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh\"\nwget -nv \"${cmake_url}\" -O cmake-installer.sh\nchmod +x cmake-installer.sh\nsudo ./cmake-installer.sh --skip-license --prefix=/usr/local\nrm cmake-installer.sh\n\n# LLVM\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nLLVM_VERSION=\"21\"\nwget -qOllvm.sh [https://apt.llvm.org/llvm.sh](https://apt.llvm.org/llvm.sh) &amp;&amp; chmod +x llvm.sh &amp;&amp; sudo ./llvm.sh $LLVM_VERSION all &amp;&amp; rm ./llvm.sh\n\nsource ./src/build/scripts/install_llvm_mingw.sh\necho \"export LLVM_MINGW_DIR=${LLVM_MINGW_DIR}\" &gt;&gt; ~/.bashrc\necho \"export LLVM_MINGW_DIR=${LLVM_MINGW_DIR}\" &gt;&gt; ~/.zshrc\n</code></pre> <pre><code>pacman -S --noconfirm \\\n        base-devel \\\n        git \\\n        wget \\\n        curl \\\n        gnupg \\\n        python \\\n        python-pip \\\n        ninja \\\n        nasm \\\n        yasm \\\n        pkgconf \\\n        openssl \\\n        llvm \\\n        clang \\\n        clang-tools-extra \\\n        lld \\\n        llvm-libs \\\n        cmake\nyay -S --noconfirm libc++-with-libunwind\n</code></pre> Chocolatey\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304b\u3089\u3001\u7ba1\u7406\u8005\u6a29\u9650\u3064\u304d\u3067\u8d77\u52d5\u3057\u305fPowerShell\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 <pre><code>choco install -y nsis ninja nasm cmake llvm\n</code></pre> <pre><code>brew update\nbrew install ninja nasm cmake llvm@20 lld@20\necho 'export PATH=\"$(brew --prefix llvm@20)/bin:$PATH\"' &gt;&gt; ~/.bash_profile\necho 'export PATH=\"$(brew --prefix lld@20)/bin:$PATH\"' &gt;&gt; ~/.bash_profile\n</code></pre>   \u3059\u3079\u3066\u306e\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002   <pre><code>nasm --version\n# \u671f\u5f85\u3055\u308c\u308b\u51fa\u529b: NASM version 2.16.03 compiled on May 13 2025\n\ncmake --version\n# \u671f\u5f85\u3055\u308c\u308b\u51fa\u529b: cmake version 4.1.1-dirty\n# CMake suite maintained and supported by Kitware ([kitware.com/cmake](https://kitware.com/cmake)).\n\nninja --version\n# \u671f\u5f85\u3055\u308c\u308b\u51fa\u529b: 1.12.1\n\nclang --version\n# \u671f\u5f85\u3055\u308c\u308b\u51fa\u529b: clang version 20.1.8\n# Target: x86_64-pc-linux-gnu\n# Thread model: posix\n# InstalledDir: /usr/bin\n\n# Linux\u306e\u307f\necho $LLVM_MINGW_DIR\n# \u671f\u5f85\u3055\u308c\u308b\u51fa\u529b: /opt/llvm-mingw-20250826-ucrt-ubuntu-22.04-x86_64\n</code></pre>"},{"location":"ja/install/#3","title":"\u30b9\u30c6\u30c3\u30d73: \u30d3\u30eb\u30c9\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u30d3\u30eb\u30c9\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f5\u301c10\u5206\u304b\u304b\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002  </p> <pre><code>./cc build --release --install\n</code></pre> <p>\u6b63\u5e38\u306b\u5b8c\u4e86\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u6210\u679c\u7269\u306f<code>./out/install/{os}/{arch}/release/bin/</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002</p> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3068\u4f9d\u5b58\u95a2\u4fc2\u304c\u3059\u3079\u3066\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u9069\u5207\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u518d\u5ea6\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/tutorials/0001_helloworld/","title":"\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\uff01","text":"<p>\u3053\u308c\u304credy\u8a00\u8a9e\u3067\u66f8\u3044\u305fHello World\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002<code>main.ry</code>\u306b\u30b3\u30d4\u30da\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044</p> <pre><code>fn main() {\n  println#(\"redy\u304b\u3089\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\")\n}\n</code></pre> <p>\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 \u4ee5\u4e0b\u306b\u793a\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001<code>./out/</code>\u5185\u306b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044  </p> <pre><code>redy main.ry\n# Compiling... : main.ry\n# Compiled!    : main.ry\n</code></pre> <p>\u6b63\u3057\u304f\u751f\u6210\u3055\u308c\u305f\u3089\u3001\u305d\u308c\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046</p> <pre><code>./out/main\n# redy\u304b\u3089\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\n</code></pre> <p>\"redy\u304b\u3089\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\"\u3068\u3044\u3046\u6587\u5b57\u5217\u304c\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059</p>"},{"location":"ja/tutorials/0001_helloworld/#_2","title":"\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\u306e\u4e2d\u8eab","text":"<p>\u5148\u307b\u3069\u306e\u975e\u5e38\u306b\u5358\u7d14\u306a\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\u30d7\u30ed\u30b0\u30e9\u30e0\u30921\u884c\u305a\u3064\u898b\u3066\u7406\u89e3\u3057\u3066\u307f\u307e\u3057\u3087\u3046</p> <p><code>fn main() {</code></p> <p>\u3053\u306e\u6700\u521d\u306e\u884c\u306f\u3001\u3053\u308c\u304b\u3089<code>main</code>\u3068\u3044\u3046\u540d\u524d\u306e<code>\u95a2\u6570</code>(<code>function/fn</code>)\u304c\u3042\u308a\u307e\u3059\u3088\u3068\u3044\u3046\u5ba3\u8a00\u3067\u3001\u305d\u306e\u5f8c\u306b\u3059\u3050\u3055\u307e\u6ce2\u62ec\u5f27\u306e\u59cb\u307e\u308a<code>{</code>\u304c\u6765\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u6ce2\u62ec\u5f27\u306e\u5185\u5074\u306b<code>main</code>\u95a2\u6570\u306e\u4e2d\u8eab\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3088\u3068\u3044\u3046\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059 \u3053\u3053\u3067<code>\u95a2\u6570</code>\u306f\u7279\u306b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u5206\u91ce\u3067\u306f\u3001\u51e6\u7406\u306e\u584a\u3068\u3057\u3066\u6349\u3048\u305f\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059 \u6570\u5b66\u306e\u95a2\u6570\u3068\u540c\u3058\u3067\u4f55\u304b\u3092\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u305f\u3089\u305d\u306e\u5024\u306b\u5fdc\u3058\u3066\u4f55\u304b\u3092\u8fd4\u3059\u3001\u3068\u3044\u3046\u50cd\u304d\u3092\u3059\u308b\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u306f\u305d\u306e\u623b\u308a\u5024\u3092\u6c42\u3081\u308b\u904e\u7a0b\u3067\u4f55\u3089\u304b\u306e\u526f\u4f5c\u7528(\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3068\u304b\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u307f\u3068\u304b\u3001\u306a\u3069\u306a\u3069)\u3092\u8d77\u3053\u3059\u95a2\u6570\u3067\u3042\u3063\u305f\u308a\u3001\u305d\u3082\u305d\u3082\u5024\u3092\u8fd4\u3055\u306a\u3044\u95a2\u6570\u3082\u3042\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u3082\u306f\u3084\u6570\u5b66\u306e\u95a2\u6570\u3068\u306f\u4f3c\u3066\u3082\u4f3c\u3064\u304b\u306a\u3044\u7269\u3082\u591a\u304f\u3042\u308a\u307e\u3059 <code>\u95a2\u6570</code>\u3068\u306f\u305d\u3046\u3044\u3046\u7269\u3060\u3068\u8a8d\u8b58\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044  </p> <p><code>println#(\"redy\u304b\u3089\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\uff01\")</code></p> <p>\u6b21\u306e\u884c\u3082\u81f3\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u3067\u3001<code>println#()</code>\u3068\u3044\u3046\u95a2\u6570*\u3092<code>\"redy\u304b\u3089\u30cf\u30ed\u30fc\u30ef\u30fc\u30eb\u30c9\uff01\"</code>\u3068\u3044\u3046\u5f15\u6570\u3092\u3064\u3051\u3066\u547c\u3076\u3001\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002<code>println#()</code>\u306f\u6a19\u6e96\u3067\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u95a2\u6570\u3067\u3001println\u3068\u3044\u3046\u540d\u524d\u306f<code>print line</code>\u306e\u7565\u304b\u3089\u6765\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3001\u6700\u5f8c\u306b\u6539\u884c\u30b3\u30fc\u30c9\u3082\u51fa\u529b\u3057\u307e\u3059 \u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3(<code>\"</code>)\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u306f<code>\u30ea\u30c6\u30e9\u30eb\u6587\u5b57\u5217</code>\u3068\u3044\u3046\u3001\u4e00\u5ea6\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u6587\u5b57\u306e\u96c6\u5408\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059  </p> <p>\u3053\u3053\u3067\u306f<code>println#()</code>\u3092\u95a2\u6570\u3068\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001\u53b3\u5bc6\u306b\u306f\u95a2\u6570\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u771f\u306b\u9a5a\u304f\u3079\u304d\u305d\u306e\u7406\u7531\u3092\u8aac\u660e\u3059\u308b\u306b\u306f\u3053\u306e\u4f59\u767d\u306f\u72ed\u3059\u304e\u308b\u306e\u3067\u3001\u3042\u3068\u3067\u89e6\u308c\u307e\u3059\u3002\u95a2\u6570\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u3082\u306e\u306a\u306e\u3067\u4eca\u306f\u95a2\u6570\u3068\u3057\u3066\u8a8d\u8b58\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044  </p> <p><code>}</code></p> <p>\u6700\u5f8c\u306e\u884c\u306f\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u3067\u30011\u884c\u76ee\u306b\u66f8\u3044\u305f\u6ce2\u62ec\u5f27\u306e\u59cb\u307e\u308a<code>{</code>\u306b\u5bfe\u5fdc\u3059\u308b\u6ce2\u62ec\u5f27\u306e\u7d42\u308f\u308a\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u3053\u3053\u3067\u3053\u306e\u95a2\u6570\u306e\u4e2d\u8eab\u306e\u5b9a\u7fa9\u3092\u7d42\u308f\u308a\u307e\u3059\u3088\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059 \u305d\u3057\u3066\u3001\u3053\u3053\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u308f\u308a\u306a\u306e\u3067\u3001\u4eca\u898b\u3066\u304d\u305f3\u884c\u3067\u6700\u4f4e\u9650\u4f55\u304b\u3084\u3063\u3066\u308b\u611f\u304c\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4f5c\u308c\u305f\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059</p>"},{"location":"ja/tutorials/0002_data_types_and_variables/","title":"Data Types and Variables","text":"<p>\u3053\u308c\u3067\u65e2\u306b\u3042\u306a\u305f\u306f\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092redy\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u306d \u4eca\u5ea6\u306fredy\u306e\u30c7\u30fc\u30bf\u578b\u3068\u5909\u6570\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046</p>"},{"location":"ja/tutorials/0002_data_types_and_variables/#_1","title":"\u30c7\u30fc\u30bf\u578b","text":"<p>\u30c7\u30fc\u30bf\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u6559\u3048\u307e\u3059\u3002\u307b\u304b\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u540c\u69d8\u306b\u3001redy\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u578b\u304c\u5143\u304b\u3089\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u6574\u6570\u578b (<code>i32</code>, <code>i64</code>, <code>u32</code>, \u306a\u3069): \u57fa\u672c\u7684\u306a\u6574\u6570\u578b\u3067\u3059\u3002<code>i</code>/<code>u</code>\u306f\u8ca0\u306e\u5024\u3092\u8a31\u3059\u304b\u3069\u3046\u304b\u306e\u5024\u3067\u3001<code>32</code>/<code>64</code>\u306a\u3069\u306f\u6271\u3048\u308b\u6570\u5024\u306ebit\u6570\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002</li> <li>\u771f\u507d\u5024 (<code>bool</code>): <code>true</code>(\u771f)\u307e\u305f\u306f<code>false</code>(\u507d)\u3060\u3051\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> <li>\u6587\u5b57\u5217 (<code>str</code>): \u6587\u5b57\u306e\u96c6\u5408\u3067\u3059\u3002</li> </ul> <p>redy\u306b\u306f\u3082\u3063\u3068\u305f\u304f\u3055\u3093\u306e\u578b\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u306f\u3053\u308c\u3089\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u5f53\u3066\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"ja/tutorials/0002_data_types_and_variables/#_2","title":"\u5909\u6570","text":"<p>\u5909\u6570\u306f\u540d\u524d\u306e\u4ed8\u3051\u3089\u308c\u305f\u30c7\u30fc\u30bf\u7f6e\u304d\u5834\u3067\u3059\u3002redy\u306b\u304a\u3044\u3066\u306f\u3001<code>:=</code>\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3053\u3068\u3067\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>fn main() {\n\u00a0 my_number := 42            // \u6574\u6570\u306e\u5909\u6570\n\u00a0 is_active := true          // \u771f\u507d\u5024\u306e\u5909\u6570\n\u00a0 greeting := \"\u304a\u306f\u3088\u3046!\"     // \u6587\u5b57\u5217\u306e\u5909\u6570\n\u00a0\n\u00a0 println#(\"\u6570\u5b57\u306f: {}\", my_number)\n\u00a0 println#(\"\u4eca\u30a2\u30af\u30c6\u30a3\u30d6\u304b\u3069\u3046\u304b: {}\", is_active)\n\u00a0 println#(\"\u3042\u3044\u3055\u3064: {}\", greeting)\n}\n</code></pre> <p>\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u306e\u5909\u6570\u306e\u5024\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 redy \u306f\u591a\u304f\u306e\u5834\u5408\u3001\u660e\u793a\u7684\u306b\u8a18\u8ff0\u3057\u306a\u304f\u3066\u3082\u5909\u6570\u306e\u30c7\u30fc\u30bf\u578b\u3092 \u63a8\u8ad6 \u3067\u304d\u308b\u305f\u3081\u3001\u30b3\u30fc\u30c9\u304c\u7c21\u6f54\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/tutorials/0003_print_formatted/","title":"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8","text":"<p>\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046:</p> <pre><code>fn main() {\n  n := 5\n  println#(\"3\u8db3\u30592\u306e\u548c\u306f{}\", n)\n}\n</code></pre> <pre><code>redy main.ry\n# Compiling... : main.ry\n# Completed!   : main.ry\n\n./out/main\n# 3\u8db3\u30592\u306e\u548c\u306f5\n</code></pre> <p>\u6570\u5b57\u304c\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u306d \u898b\u3066\u306e\u901a\u308a\u3001<code>n</code>\u3068\u3044\u3046\u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u305f\u5024\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u3066\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002 \u3053\u306e\u3088\u3046\u306b\u3001<code>println#()</code>\u306b\u306f\u8907\u6570\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u6700\u521d\u306e\u5f15\u6570\u306f<code>format string</code>\u3068\u547c\u3070\u308c\u3001\u305d\u308c\u4ee5\u5916\u306e\u5f15\u6570\u306f\u5168\u3066<code>format args</code>\u3068\u547c\u3070\u308c\u307e\u3059\u3002 <code>format string</code>\u306e\u5185\u90e8\u306b\u3042\u308b\u3059\u3079\u3066\u306e\u30d6\u30e9\u30b1\u30c3\u30c8(<code>{}</code>)\u306f\u3001\u51fa\u3066\u304d\u305f\u9806\u756a\u306b<code>format args</code>\u306e\u5024\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u3066\u3044\u304d\u307e\u3059</p>"},{"location":"ja/tutorials/0004_simple_fizz_buzz_program/","title":"\u30b7\u30f3\u30d7\u30eb\u306aFizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>FizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u57fa\u672c\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b9\u30ad\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u305f\u3081\u306e\u4e00\u822c\u7684\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u8ab2\u984c\u3067\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u901a\u5e381\u304b\u3089100\u307e\u3067\u306e\u6570\u5024\u306e\u5217\u3092\u9806\u306b\u51e6\u7406\u3057\u307e\u3059\u3002 \u5404\u6570\u5024\u306b\u3064\u3044\u3066\u30013\u30685\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 3\u3067\u5272\u308a\u5207\u308c\u308b\u5834\u5408\u3001\u300cFizz\u300d\u3068\u51fa\u529b\u3057\u307e\u3059\u3002 5\u3067\u5272\u308a\u5207\u308c\u308b\u5834\u5408\u3001\u300cBuzz\u300d\u3068\u51fa\u529b\u3057\u307e\u3059\u3002 3\u30685\u306e\u4e21\u65b9\u3067\u5272\u308a\u5207\u308c\u308b\u5834\u5408\u3001\u300cFizzBuzz\u300d\u3068\u51fa\u529b\u3057\u307e\u3059\u3002 \u3044\u305a\u308c\u306e\u6761\u4ef6\u3082\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u6570\u5024\u81ea\u4f53\u3092\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p>\u3067\u306f\u3001redy\u3067FizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>fn main() {\n  for i: 1..=100 {\n    if i % 15 == 0 {\n      println#(\"FizzBuzz\")\n    } else if i % 3 == 0 {\n      println#(\"Fizz\")\n    } else if i % 5 == 0 {\n      println#(\"Buzz\")\n    } else {\n      println#(\"{}\", i)\n    }\n  }\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u30011\u304b\u3089100\u307e\u3067\u306eFizzBuzz\u306e\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>\u6700\u521d\u306e\u884c<code>for i: 1..=100 { ... }</code>\u306f\u3001\u6570\u5024<code>i</code>\u3092<code>1</code>\u304b\u3089<code>100</code>\u307e\u3067(\u4e21\u7aef\u3092\u542b\u3080)\u3092\u53cd\u5fa9\u3059\u308b\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u6ce2\u62ec\u5f27<code>{ ... }</code>\u5185\u306e\u30b3\u30fc\u30c9\u306f\u3001\u5404\u6570\u5024\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p> <p>\u30eb\u30fc\u30d7\u5185\u3067\u306f\u3001\u6761\u4ef6\u306b\u57fa\u3065\u3044\u3066\u7570\u306a\u308b\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b<code>if...else if...else</code>\u6587\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <ul> <li><code>i % 15 == 0</code>: \u3053\u306e\u6761\u4ef6\u306f\u3001<code>i</code>\u304c15\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002<code>%</code>\u6f14\u7b97\u5b50\u306f\u5de6\u8fba\u3092\u53f3\u8fba\u3067\u5272\u3063\u305f\u4f59\u308a\u3092\u8a08\u7b97\u3059\u308b\u306e\u3067\u3001\u305d\u308c\u304c<code>0</code>\u3067\u3042\u308c\u3070<code>i</code>\u304c15\u306e\u500d\u6570\u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059</li> <li><code>i % 3 == 0</code>\u3068<code>i % 5 == 0</code>\u306f\u305d\u308c\u305e\u308c<code>i</code>\u304c3\u306e\u500d\u6570\u304b\u30015\u306e\u500d\u6570\u304b\u3092\u540c\u69d8\u306b\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059</li> <li><code>else { println#(\"{}\", i) }</code>: \u3053\u308c\u3089\u3059\u3079\u3066\u306e\u6761\u4ef6\u304c\u771f\u3067\u306a\u3044\u5834\u5408\u3001\u6570\u5b57\u3092\u76f4\u63a5\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059</li> </ul> <p><code>i % 15 == 0</code>\u304c\u6700\u521d\u306b\u8a55\u4fa1\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u304c\u4e00\u756a\u4e0a\u306b\u7f6e\u304b\u308c\u3066\u3044\u308b\u306e\u306f\u300115\u3067\u5272\u308a\u5207\u308c\u308b\u6570\u5b57\u304c3\u3067\u308215\u3067\u3082\u5272\u308a\u5207\u308c\u308b\u305f\u3081\u3067\u3059\u3002\u3082\u3057\u6700\u521d\u306b<code>i % 3 == 0</code>\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308c\u3070\u3001\"FizzBuzz\"\u3068\u51fa\u529b\u3055\u308c\u308b\u3079\u304d\u3059\u3079\u3066\u306e\u6570\u5b57\u3067\u5148\u306b\"Fizz\"\u304c\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u3053\u308c\u306f\u6b63\u3057\u3044FizzBuzz\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u8a00\u3048\u306a\u304f\u306a\u308a\u307e\u3059</p>"}]}